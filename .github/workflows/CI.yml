name: Java CI with manual run

on:
  push:
    branches: "enegpra-patch-3"
  workflow_dispatch:
  

jobs:
    compile_code:

        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: maven
        - name: Validate with Maven
          run: mvn validate
        - name: Compile with Maven
          run: mvn compile
        - name: Test with maven
          run: mvn test
    Trivy_fs_scan_code:

        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        - name: Trivy_fs_scan_code
          uses: aquasecurity/trivy-action@0.28.0
          with:
            scan-type: 'fs'
            scan-ref: '.'
            output: trivy-report.html
            format: table
            exit-code: 0
        - name: Upload Vulnerability Scan Results
          uses: actions/upload-artifact@v4
          with:
            name: trivy-report
            path: trivy-report.html
            retention-days: 30
    Sonar-Analysis:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v4
      - name: Analyze with SonarQube

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
        with:
          args:
            -Dsonar.projectKey=petclinic
            -Dsonar.projectName=petclinic
            -Dsonar.java.binaries=.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

      # Optionally you can use the output from the Quality Gate in another step.
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      - name: "Example show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"


